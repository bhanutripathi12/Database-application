import { __values } from "tslib";
import crypto from 'crypto';
export function computeSha1() {
    var e_1, _a;
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    var sha1Hash = crypto.createHash('sha1');
    try {
        for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
            var d = data_1_1.value;
            sha1Hash.update(d);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return sha1Hash.digest('hex');
}
//# sourceMappingURL=sha1.mjs.map